<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Endereco extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Endereco_model');
         
        $user = $this->session->userdata();  
        
        $row = count($user);      
              
        if($row==1){      
            
            redirect('login');
        }
    } 

    /*
     * Listing of enderecos
     */
    function index()
    {
        $data['enderecos'] = $this->Endereco_model->get_all_enderecos();
        
        $data['_view'] = 'endereco/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new endereco
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('cep','Cep','max_length[45]');
		$this->form_validation->set_rules('endereco','Endereco','max_length[45]');
		$this->form_validation->set_rules('numero','Numero','max_length[45]');
		$this->form_validation->set_rules('complemento','Complemento','max_length[45]');
		$this->form_validation->set_rules('bairro','Bairro','max_length[45]');
		$this->form_validation->set_rules('cidade','Cidade','max_length[45]');
		$this->form_validation->set_rules('uf','Uf','max_length[45]');
		$this->form_validation->set_rules('tblEnderecocol','TblEnderecocol','max_length[45]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'cep' => $this->input->post('cep'),
				'endereco' => $this->input->post('endereco'),
				'numero' => $this->input->post('numero'),
				'complemento' => $this->input->post('complemento'),
				'bairro' => $this->input->post('bairro'),
				'cidade' => $this->input->post('cidade'),
				'uf' => $this->input->post('uf'),
				'tblEnderecocol' => $this->input->post('tblEnderecocol'),
            );
            
            $endereco_id = $this->Endereco_model->add_endereco($params);
            redirect('endereco/index');
        }
        else
        {            
            $data['_view'] = 'endereco/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a endereco
     */
    function edit($IDEndereco)
    {   
        // check if the endereco exists before trying to edit it
        $data['endereco'] = $this->Endereco_model->get_endereco($IDEndereco);
        
        if(isset($data['endereco']['IDEndereco']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('cep','Cep','max_length[45]');
			$this->form_validation->set_rules('endereco','Endereco','max_length[45]');
			$this->form_validation->set_rules('numero','Numero','max_length[45]');
			$this->form_validation->set_rules('complemento','Complemento','max_length[45]');
			$this->form_validation->set_rules('bairro','Bairro','max_length[45]');
			$this->form_validation->set_rules('cidade','Cidade','max_length[45]');
			$this->form_validation->set_rules('uf','Uf','max_length[45]');
			$this->form_validation->set_rules('tblEnderecocol','TblEnderecocol','max_length[45]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'cep' => $this->input->post('cep'),
					'endereco' => $this->input->post('endereco'),
					'numero' => $this->input->post('numero'),
					'complemento' => $this->input->post('complemento'),
					'bairro' => $this->input->post('bairro'),
					'cidade' => $this->input->post('cidade'),
					'uf' => $this->input->post('uf'),
					'tblEnderecocol' => $this->input->post('tblEnderecocol'),
                );

                $this->Endereco_model->update_endereco($IDEndereco,$params);            
                redirect('endereco/index');
            }
            else
            {
                $data['_view'] = 'endereco/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The endereco you are trying to edit does not exist.');
    } 

    /*
     * Deleting endereco
     */
    function remove($IDEndereco)
    {
        $endereco = $this->Endereco_model->get_endereco($IDEndereco);

        // check if the endereco exists before trying to delete it
        if(isset($endereco['IDEndereco']))
        {
            $this->Endereco_model->delete_endereco($IDEndereco);
            redirect('endereco/index');
        }
        else
            show_error('The endereco you are trying to delete does not exist.');
    }
    
}
