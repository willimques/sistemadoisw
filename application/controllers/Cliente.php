<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Cliente extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Cliente_model');
        
        $user = $this->session->userdata();  
        
      if($user==false){ 
        
            redirect('login');
        
        }
    } 

    /*
     * Listing of clientes
     */
    function index()
    {
        $data['clientes'] = $this->Cliente_model->get_all_clientes();
        $data['_view'] = 'cliente/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new cliente
     */
    function add()
    {   
        $this->load->library('form_validation');

        $this->form_validation->set_rules('limite','Limite','numeric');   
        $this->form_validation->set_rules('tabelaPreco','Tabela','required');   

        if($this->form_validation->run())     
        {   
            // Recebe os valores do para atualizar a tabela pessoa 
            $id = 1;
            $IDPessoa = $this->input->post('IDCliente');
            
            // atualiza a tabela cliente
            $params = array(

                'IDCliente' => $this->input->post('IDCliente'),
                'limite' => $this->input->post('limite'),
            );

            $cliente_id = $this->Cliente_model->add_cliente($params);
            
            //atualiza a tabela pessoa com o tipo de cadastro 

            $params = array(

                'IDTipoCadastro' =>  $id,                 
            );


            $this->load->model('Pessoa_model');
            $this->Pessoa_model->update_pessoa($IDPessoa,$params);
            
            // adiciona a tabela de preco 
            
            $params = array(

                'IDPreco' => $this->input->post('tabelaPreco'),
                'IDPessoa' => $this->input->post('IDCliente'),

            );

            $this->load->model('Precopessoa_model');            
            $precopessoa_id = $this->Precopessoa_model->add_precopessoa($params);  

           
            redirect('cliente/index');
        }
        else
        {   
            $this->load->model('Pessoa_model');
            $data['all_pessoas'] = $this->Pessoa_model->get_pessoas_semCad();   

            $this->load->model('Preco_model');
            $data['all_precos'] = $this->Preco_model->get_all_precos();

            $data['_view'] = 'cliente/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a cliente
     */
    function edit($IDCliente)
    {   
        // check if the cliente exists before trying to edit it
        $data['cliente'] = $this->Cliente_model->get_cliente($IDCliente);

        if(isset($data['cliente']['IDCliente']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('limite','Limite','numeric');


            if($this->form_validation->run())     
            {   

                if(!$this->input->post('limite')==null)
                {
                    $params = array(

                        'limite' => $this->input->post('limite'),                    

                    );

                    $this->Cliente_model->update_cliente($IDCliente,$params); 
                }

                if(!$this->input->post('IDPreco')==null)
                {
                    $params = array(

                        'IDPreco' => $this->input->post('IDPreco'),

                    );  

                    $this->load->model('Precopessoa_model');

                    $precopessoa_id = $this->Precopessoa_model->update_precopessoa($IDCliente,$params);
                }

                redirect('cliente/index');

            }
            else
            {   
                $this->load->model('Precopessoa_model');
                $data['pessoapreco'] = $this->Precopessoa_model->get_precopessoa($IDCliente);

                $this->load->model('Preco_model');
                $data['all_precos'] = $this->Preco_model->get_all_precos();

                $data['_view'] = 'cliente/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The cliente you are trying to edit does not exist.');
    } 

    /*
     * Deleting cliente
     */
    function remove($IDCliente)
    {
        $cliente = $this->Cliente_model->get_cliente($IDCliente);

        // check if the cliente exists before trying to delete it
        if(isset($cliente['IDCliente']))
        {
            
            $this->load->model('Precopessoa_model');
            
            $this->Precopessoa_model->delete_precopessoa($IDCliente);

            $this->Cliente_model->delete_cliente($IDCliente);

            $params = array(

                'IDTipoCadastro' =>  $id = 0,               
            );

            $this->load->model('Pessoa_model');
            $this->Pessoa_model->update_pessoa($IDCliente,$params);

            redirect('cliente/index');
        }
        else
            show_error('The cliente you are trying to delete does not exist.');
    }

}
