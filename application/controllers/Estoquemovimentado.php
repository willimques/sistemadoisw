<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Estoquemovimentado extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Estoquemovimentado_model');
          
        $user = $this->session->userdata();  
        
    if($user==false){ 
        
            redirect('login');
        
        }
    } 
    

    /*
     * Listing of estoquemovimentado
     */
    function index()
    {
        $data['estoquemovimentado'] = $this->Estoquemovimentado_model->get_all_estoquemovimentado();
        
        $data['_view'] = 'estoquemovimentado/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new estoquemovimentado
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'IDProduto' => $this->input->post('IDProduto'),
				'Data' => $this->input->post('Data'),
				'tipoMovimento' => $this->input->post('tipoMovimento'),
				'quantidade' => $this->input->post('quantidade'),
            );
            
            $estoquemovimentado_id = $this->Estoquemovimentado_model->add_estoquemovimentado($params);
            redirect('estoquemovimentado/index');
        }
        else
        {            
            $data['_view'] = 'estoquemovimentado/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a estoquemovimentado
     */
    function edit($IDEstoqueMovimentado)
    {   
        // check if the estoquemovimentado exists before trying to edit it
        $data['estoquemovimentado'] = $this->Estoquemovimentado_model->get_estoquemovimentado($IDEstoqueMovimentado);
        
        if(isset($data['estoquemovimentado']['IDEstoqueMovimentado']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'IDProduto' => $this->input->post('IDProduto'),
					'Data' => $this->input->post('Data'),
					'tipoMovimento' => $this->input->post('tipoMovimento'),
					'quantidade' => $this->input->post('quantidade'),
                );

                $this->Estoquemovimentado_model->update_estoquemovimentado($IDEstoqueMovimentado,$params);            
                redirect('estoquemovimentado/index');
            }
            else
            {
                $data['_view'] = 'estoquemovimentado/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The estoquemovimentado you are trying to edit does not exist.');
    } 

    /*
     * Deleting estoquemovimentado
     */
    function remove($IDEstoqueMovimentado)
    {
        $estoquemovimentado = $this->Estoquemovimentado_model->get_estoquemovimentado($IDEstoqueMovimentado);

        // check if the estoquemovimentado exists before trying to delete it
        if(isset($estoquemovimentado['IDEstoqueMovimentado']))
        {
            $this->Estoquemovimentado_model->delete_estoquemovimentado($IDEstoqueMovimentado);
            redirect('estoquemovimentado/index');
        }
        else
            show_error('The estoquemovimentado you are trying to delete does not exist.');
    }
    
}
