<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Pessoa extends CI_Controller{
    function __construct()
    {
        parent::__construct();

        $this->load->model('Pessoa_model');
        $this->load->model('Endereco_model');
        $this->load->model('Contato_model');
        $this->load->model('PessoaFisica_model');
        $this->load->model('PessoaJuridica_model');
        
         
        $user = $this->session->userdata();  
        
        $row = count($user);      
              
        if($row==1){ 
        
            redirect('login');
        
        }
      

    } 

    /*
     * Listing of pessoas
     */
    function index()
    {
        $data['pessoas'] = $this->Pessoa_model->get_all_pessoas();

        $data['_view'] = 'pessoa/index';          
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new pessoa
     */
    function add()
    {   
        $this->load->library('form_validation');

        $this->form_validation->set_rules('IDPessoaTipo','Tipo pessoa','required');
        $this->form_validation->set_rules('nome','Nome','trim|required');
        $this->form_validation->set_rules('nomeFantasia','NomeFantasia','max_length[45]');   

        $this->form_validation->set_rules('cep','Cep','required');
        $this->form_validation->set_rules('endereco','Endereco','required');
        $this->form_validation->set_rules('numero','Numero','required');
        $this->form_validation->set_rules('complemento','Complemento','max_length[45]');
        $this->form_validation->set_rules('bairro','Bairro','required');
        $this->form_validation->set_rules('cidade','Cidade','required');
        $this->form_validation->set_rules('estado','estado','required');

        $this->form_validation->set_rules('email','Email','required');
        $this->form_validation->set_rules('re-email','Confirma Email','required|matches[email]');

        $this->form_validation->set_rules('telRes','TelRes','max_length[45]');
        $this->form_validation->set_rules('telCel','TelCel','max_length[45]');
        $this->form_validation->set_rules('operadora','Operadora','max_length[45]');

        $teste = $this->form_validation->run();


        if($this->form_validation->run())  

        {   

            $pessoa = $this->input->post('IDPessoaTipo');

            $params = array(

                'IDPessoaTipo' => $this->input->post('IDPessoaTipo'),
                'codigo' => $this->input->post('codigo'),
                'nome' => $this->input->post('nome'),
                'nomeFantasia' => $this->input->post('nomeFantasia'),
                'data_cadastro' => date ("Y-m-d"),
                'situacao' => $this->input->post('situacao'),
                'comment' => $this->input->post('comment'),

            );

            $pessoa_id = $this->Pessoa_model->add_pessoa($params);

            if ($pessoa == 1){                

                $params = array(                
                    'IDPessoaFisica' => $pessoa_id,
                    'cpf' => $this->input->post('cpf'),
                    'rg' => $this->input->post('rg'),
                    'dataNascimento' => $this->input->post('dataNascimento'),

                );

                $this->load->model('Pessoafisica_model');

                $this->Pessoafisica_model->add_pessoafisica($params);

            }else{

                $params = array(

                    'IDPessoaJuridica' => $pessoa_id,
                    'cnpj' => $this->input->post('cnpj'),
                    'inscricaoEstadual' => $this->input->post('inscricaoEstadual'),
                    'InscricaoMunicial' => $this->input->post('InscricaoMunicial'),
                    'dataAbertura' => $this->input->post('dataAbertura'),

                );

                $this->load->model('Pessoajuridica_model');

                $this->Pessoajuridica_model->add_pessoajuridica($params);

            }            

            $params = array(

                'IDPessoa' =>  $pessoa_id,
                'cep' => $this->input->post('cep'),
                'endereco' => $this->input->post('endereco'),
                'numero' => $this->input->post('numero'),
                'complemento' => $this->input->post('complemento'),
                'bairro' => $this->input->post('bairro'),
                'cidade' => $this->input->post('cidade'),
                'uf' => $this->input->post('estado')

            );

            $this->load->model('Endereco_model');
            $this->Endereco_model->add_endereco($params);

            $params = array(

                'IDPessoa' =>  $pessoa_id,
                'nome' => $this->input->post('nome'),
                'email' => $this->input->post('email'),
                'telRes' => $this->input->post('telRes'),
                'telCel' => $this->input->post('telCel'),
                'operadora' => $this->input->post('operadora'),
            );

            $this->load->model('Contato_model');
            $this->Contato_model->add_contato($params);
            redirect('pessoa/index');
        }
        else
        {
            $this->load->model('Pessoatipo_model');
      
            $data['all_pessoatipos'] = $this->Pessoatipo_model->get_all_pessoatipos();

            $data['_view'] = 'pessoa/add';
            $data['_custom'] = 'assets/pessoa/custom'; 
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Vizualizar a  pessoa
     */

    function profile($IDPessoa)
    {   
        // check if the pessoa exists before trying to edit it
        $data['pessoa'] = $this->Pessoa_model->get_pessoa($IDPessoa); 



        if(isset($data['pessoa']['IDPessoa']))
        {

            $data['endereco'] = $this->Endereco_model->get_endereco($IDPessoa);
            $data['contato'] = $this->Contato_model->get_contato($IDPessoa);
            $data['dadosPF'] = $this->PessoaFisica_model->get_pessoafisica($IDPessoa);
            $data['dadosPJ'] = $this->PessoaJuridica_model->get_pessoajuridica($IDPessoa);

            $data['_view'] = 'pessoa/profile';
            $data['_custom'] = 'assets/pessoa/custom'; 
            $this->load->view('layouts/main',$data);


        }
        else
            show_error('A pessoa que voce esta tentando editar nÃ£o existe.');
    } 


    /*
     * Editing a pessoa
     */
    function edit($IDPessoa)
    {   
        // check if the pessoa exists before trying to edit it
        $data['pessoa'] = $this->Pessoa_model->get_pessoa($IDPessoa);



        if(isset($data['pessoa']['IDPessoa']))
        {

            $data['endereco'] = $this->Endereco_model->get_endereco($IDPessoa);
            $data['contato'] = $this->Contato_model->get_contato($IDPessoa);
            $data['pessoafisica'] = $this->PessoaFisica_model->get_pessoafisica($IDPessoa);
            $data['pessoajuridica'] = $this->PessoaJuridica_model->get_pessoajuridica($IDPessoa);

            $this->load->library('form_validation');  

            $this->form_validation->set_rules('nome','Nome','max_length[45]|required');
            $this->form_validation->set_rules('telRes','TelRes','max_length[45]');           
            $this->form_validation->set_rules('telCel','TelCel','max_length[45]');
            $this->form_validation->set_rules('operadora','Operadora','max_length[45]');


            if($this->form_validation->run())  

            {   
                $params = array(

                    'codigo' => $this->input->post('codigo'),
                    'nome' => $this->input->post('nome'),
                    'nomeFantasia' => $this->input->post('nomeFantasia'),                           
                    'situacao' => $this->input->post('situacao'),
                );

          
                $this->Pessoa_model->update_pessoa($IDPessoa,$params); 

                $params = array(

                    'email' => $this->input->post('email'),
                    'telRes' => $this->input->post('telRes'),
                    'telCel' => $this->input->post('telCel'),
                    'operadora' => $this->input->post('operadora'),
                );

                $this->Contato_model->update_contato($IDPessoa,$params);  

                $params = array(
                    'cep' => $this->input->post('cep'),
                    'endereco' => $this->input->post('endereco'),
                    'numero' => $this->input->post('numero'),
                    'complemento' => $this->input->post('complemento'),
                    'bairro' => $this->input->post('bairro'),
                    'cidade' => $this->input->post('cidade'),
                    'uf' => $this->input->post('estado'),

                );

                $this->Endereco_model->update_endereco($IDPessoa,$params);

                $tippessoa =  $data['pessoa']['IDPessoaTipo'];

                if($tippessoa == 1){

                    $params = array(
                        'cpf' => $this->input->post('cpf'),
                        'rg' => $this->input->post('rg'),
                        'dataNascimento' => $this->input->post('dataNascimento'),
                    );

                    $this->load->model('Pessoafisica_model');
                    $this->Pessoafisica_model->update_pessoafisica($IDPessoa,$params);


                }else{

                    $params = array(
                        'cnpj' => $this->input->post('cnpj'),
                        'inscricaoEstadual' => $this->input->post('inscricaoEstadual'),
                        'InscricaoMunicial' => $this->input->post('InscricaoMunicial'),
                        'dataAbertura' => $this->input->post('dataAbertura'),

                    );

                    $this->load->model('Pessoajuridica_model');
                    $this->Pessoajuridica_model->update_pessoajuridica($IDPessoa,$params); 

                }
                redirect('pessoa/index');
            }
            else

            {

                $this->load->model('Pessoatipo_model');
                $data['all_pessoatipos'] = $this->Pessoatipo_model->get_all_pessoatipos();

                $data['_view'] = 'pessoa/edit';
                $data['_custom'] = 'assets/pessoa/custom'; 
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pessoa you are trying to edit does not exist.');
    } 

    /*
     * Deleting pessoa
     */
    function remove($IDPessoa)
    {
        $pessoa = $this->Pessoa_model->get_pessoa($IDPessoa);

        // check if the pessoa exists before trying to delete it
        if(isset($pessoa['IDPessoa']))

        {             
            
            $this->Endereco_model->delete_endereco($IDPessoa);

            $this->Contato_model->delete_contato($IDPessoa); 

            $this->PessoaFisica_model->delete_pessoafisica($IDPessoa);  

            $this->PessoaJuridica_model->delete_pessoajuridica($IDPessoa);            

            $this->Pessoa_model->delete_pessoa($IDPessoa);
                       
            redirect('pessoa/index');
        }
        else
            show_error('The pessoa you are trying to delete does not exist.');
    }

}
