<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Up extends CI_Controller{
    
    function __construct()
    {
        parent::__construct();  
        $this->load->model('Up_model');  
        $user = $this->session->userdata();    
        $row = count($user);              
        if($row==1){        
        redirect('login');
        }
    } 

    function index()
    {
            
        
    }

    /*
     * Adding a new imagem
     */
    function add(){ 
         
        
        $data['up'] = $this->Up_model->get_all_imagens(); //não será preciso carregar a (up/index)  
        $data['_view'] = 'up/add';
        $this->load->view('layouts/main',$data);
        
        
        $folder = random_string('alpha'); // definimos um nome aleatório para o diretório 
        $path = "./uploads/";// definimos o path onde o arquivo será gravado
        if ( ! is_dir($path)) { // verificamos se o diretório existe// se não existe criamos com permissão de leitura e escrita
        mkdir($path, 0777, $recursive = true);      
        }
        
        $configUpload['upload_path']   = $path;// definimos as configurações para o upload// determinamos o path para gravar o arquivo
        $configUpload['allowed_types'] = 'jpg|png|gif'; // definimos - através da extensão -   // os tipos de arquivos suportados
        $configUpload['encrypt_name']  = TRUE;// definimos que o nome do arquivo // será alterado para um nome criptografado
    
        $this->upload->initialize($configUpload);// passamos as configurações para a library upload
          
        
            if ( ! $this->upload->do_upload('arquivo'))// verificamos se o upload foi processado com sucesso
           
            {   
            $data= array('error' => $this->upload->display_errors()); // em caso de erro retornamos os mesmos para uma variável // e enviamos para a tela produto    
            
            }
        
        
        else
            
        {
            $data['dadosArquivo'] = $this->upload->data(); //se correu tudo bem, recuperamos os dados do arquivo   
            $arquivoPath = 'uploads/'.$data['dadosArquivo']['file_name'];// definimos o path original do arquivo 
            $imgNome = $data['dadosArquivo']['file_name'];
            $params = array (
                'nome' => $arquivoPath,
            ); 
            $data_id = $this->Up_model->add_imagem($params);   
            redirect('produto/add');
        } 
      
    }  
    
    /*
     * Deletando imagem
     */
    
      function remove($IDImagem)
    {
        $imagem = $this->Up_model->get_imagem($IDImagem);

        // check if the produto exists before trying to delete it
        if(isset($imagem['IDImagem']))
        {
            $this->Up_model->delete_imagem($IDImagem);
            unlink($imagem['nome']);
            redirect('produto/add');
        }
        else
            show_error('The produto you are trying to delete does not exist.');
    }
    
    
}