<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Produto extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produto_model');
        $user = $this->session->userdata();  
        
        $row = count($user);      
              
        if($row==1){     
            
            redirect('login');
        }

    } 
	
    /*
     * Listing of produtos
     */
    function index()
    {
        $data['produtos'] = $this->Produto_model->get_all_produtos();

        $data['_view'] = 'produto/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new produto
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
                'IDGrupo' => $this->input->post('IDGrupo'),
                'IDCategoria' => $this->input->post('IDCategoria'),
                'IDMarcas' => $this->input->post('IDMarcas'),
                'IDfornecedor' => $this->input->post('IDfornecedor'),
                'IDUnidade' => $this->input->post('IDUnidade'),
                'nome_produto' => $this->input->post('nome_produto'),
                'codigo' => $this->input->post('codigo'),
                'precoCusto' => $this->input->post('precoCusto'),
                'precoVenda' => $this->input->post('precoVenda'),
                'situacao' => $this->input->post('situacao'),
                'descricao' => $this->input->post('descricao'),
                'codBarras' => $this->input->post('codBarras'),
                'foto' => $this->input->post('foto'),
                'dataCadastro' => $this->input->post('dataCadastro'),			
            );
                
            $produto_id = $this->Produto_model->add_produto($params);
            redirect('produto/index');
        }

        else
        {
            $this->load->model('Grupo_model');
            $data['all_grupos'] = $this->Grupo_model->get_all_grupos();

            $this->load->model('Categoria_model');
            $data['all_categorias'] = $this->Categoria_model->get_all_categorias();

            $this->load->model('Marca_model');
            $data['all_marcas'] = $this->Marca_model->get_all_marcas();

            $this->load->model('Fornecedor_model');
            $data['all_fornecedores'] = $this->Fornecedor_model->get_all_fornecedores();

            $this->load->model('Unidade_model');
            $data['all_unidades'] = $this->Unidade_model->get_all_unidades();

            $data['_view'] = 'produto/add';
            $this->load->view('layouts/main',$data);
        }
    } 

    /*
     * Editing a produto
     */
    function edit($IDProduto)
    {   
        // check if the produto exists before trying to edit it
        $data['produto'] = $this->Produto_model->get_produto($IDProduto);

        if(isset($data['produto']['IDProduto']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'IDGrupo' => $this->input->post('IDGrupo'),
                    'IDCategoria' => $this->input->post('IDCategoria'),
                    'IDMarcas' => $this->input->post('IDMarcas'),
                    'IDfornecedor' => $this->input->post('IDfornecedor'),
                    'IDUnidade' => $this->input->post('IDUnidade'),
                    'nome_produto' => $this->input->post('nome_produto'),
                    'codigo' => $this->input->post('codigo'),
                    'precoCusto' => $this->input->post('precoCusto'),
                    'precoVenda' => $this->input->post('precoVenda'),
                    'situacao' => $this->input->post('situacao'),
                    'descricao' => $this->input->post('descricao'),
                    'codBarras' => $this->input->post('codBarras'),
                    'foto' => $this->input->post('foto'),
                    'dataCadastro' => $this->input->post('dataCadastro'),	
                );

                $this->Produto_model->update_produto($IDProduto,$params);            
                redirect('produto/index');
            }
            else
            {
                $this->load->model('Grupo_model');
                $data['all_grupos'] = $this->Grupo_model->get_all_grupos();

                $this->load->model('Categoria_model');
                $data['all_categorias'] = $this->Categoria_model->get_all_categorias();

                $this->load->model('Marca_model');
                $data['all_marcas'] = $this->Marca_model->get_all_marcas();

                $this->load->model('Fornecedor_model');
                $data['all_fornecedores'] = $this->Fornecedor_model->get_all_fornecedores();

                $this->load->model('Unidade_model');
                $data['all_unidades'] = $this->Unidade_model->get_all_unidades();

                $data['_view'] = 'produto/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The produto you are trying to edit does not exist.');
    } 

    
    // Método que processar o upload do arquivo
    public function Up(){
 
        // definimos um nome aleatório para o diretório 
        $folder = random_string('alpha');
        // definimos o path onde o arquivo será gravado
        $path = "./uploads/".$folder;
 
        // verificamos se o diretório existe
        // se não existe criamos com permissão de leitura e escrita
        if ( ! is_dir($path)) {
        mkdir($path, 0777, $recursive = true);
    }
 
        // definimos as configurações para o upload
        // determinamos o path para gravar o arquivo
        $configUpload['upload_path']   = $path;
        // definimos - através da extensão - 
        // os tipos de arquivos suportados
        $configUpload['allowed_types'] = 'jpg|png|gif|pdf|zip|rar|docx|xls';
        // definimos que o nome do arquivo
        // será alterado para um nome criptografado
        $configUpload['encrypt_name']  = TRUE;
 
        // passamos as configurações para a library upload
        $this->upload->initialize($configUpload);
 
        // verificamos se o upload foi processado com sucesso
        if ( ! $this->upload->do_upload('arquivo'))
        {
            // em caso de erro retornamos os mesmos para uma variável
            // e enviamos para a home
            $data= array('error' => $this->upload->display_errors());
            $data['_view'] = 'produto/add';
            $this->load->view('layouts/main',$data);
        }
        else
        {
            //se correu tudo bem, recuperamos os dados do arquivo
            $data['dadosArquivo'] = $this->upload->data();
            // definimos o path original do arquivo
            $arquivoPath = 'uploads/'.$folder."/".$data['dadosArquivo']['file_name'];
            // passando para o array '$data'
            $data['urlArquivo'] = base_url($arquivoPath);
            // definimos a URL para download
            $downloadPath = 'download/'.$folder."/".$data['dadosArquivo']['file_name'];
            // passando para o array '$data'
            $data['urlDownload'] = base_url($downloadPath);
 
            // carregamos a view com as informações e link para download
            $data['_view'] = 'produto/download';
            $this->load->view('layouts/main',$data);
        }
    }
    
    
    
    
    
    
    
    
    /*
     * Deleting produto
     */
    function remove($IDProduto)
    {
        $produto = $this->Produto_model->get_produto($IDProduto);

        // check if the produto exists before trying to delete it
        if(isset($produto['IDProduto']))
        {
            $this->Produto_model->delete_produto($IDProduto);
            redirect('produto/index');
        }
        else
            show_error('The produto you are trying to delete does not exist.');
    }

    function get_like_produto($texto)
    {
        $produto = $this->Produto_model->get_like_produto($texto);
      

        if(!$produto)
        {   

            echo json_encode($produto);

        }
        else
        {

            $qtd = count($produto);

            for($i=0; $i < $qtd; $i++)
            {

                $retorno['qtd'] = $qtd ;
                $retorno[$i] = $produto[$i] ;

            }
             echo json_encode($retorno);

            
        }

       
    }


}
